{"version":3,"sources":["hooks/useFetch.ts","components/Error.tsx","projects/tabs/components/Tab.tsx","projects/tabs/components/Details.tsx","projects/tabs/Tabs.tsx"],"names":["useFetch","url","useState","loading","setLoading","error","setError","undefined","data","setData","retrieveData","useCallback","fetch","then","d","json","catch","e","finally","useEffect","Error","message","console","log","msg","className","src","alt","Tab","selected","title","handler","onClick","Details","company","dates","duties","map","idx","Tabs","useBodyStyles","background","color","tab","setTab","id"],"mappings":"kMAGA,SAASA,EAAaC,GAAmE,IAAD,EACxDC,oBAAS,GAD+C,mBAC/EC,EAD+E,KACtEC,EADsE,OAE5DF,mBAAS,MAFmD,mBAE/EG,EAF+E,KAExEC,EAFwE,OAG9DJ,wBAASK,GAHqD,mBAG/EC,EAH+E,KAGzEC,EAHyE,KAKhFC,EAAeC,uBAAY,WAC/BP,GAAW,GAEXQ,MAAMX,GACHY,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAC,GAAC,OAAIL,EAAQK,MAClBE,OAAM,SAAAC,GAAC,OAAIX,EAASW,MACpBC,SAAQ,kBAAMd,GAAW,QAC3B,CAACH,IAMJ,OAJAkB,qBAAU,WACRT,MACC,CAACA,IAEG,CAACF,EAAML,EAASO,EAAcL,K,mDCUxBe,IAvBf,YAA+D,IAA7Cf,EAA4C,EAA5CA,MAAOgB,EAAqC,EAArCA,QACvBF,qBAAU,WACJd,GACFiB,QAAQC,IAAIlB,KACb,CAACA,IAEJ,IAAMmB,EAAMH,IAAO,OAAahB,QAAb,IAAaA,OAAb,EAAaA,EAAOgB,SAEvC,OACE,uBAAMI,UAAU,kBAAhB,UACE,qBAAKC,IAAI,qBAAqBC,IAAI,qBAClC,mCAEIH,GAAO,6BAAKA,IAGZnB,GAAS,mF,+FCfJ,SAASuB,EAAT,GAEE,IAAD,IADZC,gBACY,SADMC,EACN,EADMA,MAAOC,EACb,EADaA,QAE3B,OACE,wBAAQN,UAAS,kBAAaI,EAAW,WAAa,IAAMG,QAASD,EAArE,SACGD,M,0GCCQ,SAASG,EAAT,GAAyD,IAArCzB,EAAoC,EAApCA,KACjC,OACE,0BAASiB,UAAU,UAAnB,UACE,mCACE,6BAAKjB,EAAKsB,QACV,6BAAKtB,EAAK0B,UACV,mBAAGT,UAAU,OAAb,SAAqBjB,EAAK2B,WAG1B3B,EAAK4B,OAAOC,KAAI,SAACvB,EAAGwB,GAAJ,OACd,sBAAKb,UAAU,WAAf,UACE,cAAC,IAAD,CAAoBA,UAAU,cAC9B,4BAAIX,MAFyBwB,W,yJCN1B,SAASC,IACtBC,YAAc,CACZC,WAAY,qBACZC,MAAO,uBAHmC,MAKV1C,YAjBnB,6CAY6B,mBAKrCQ,EALqC,KAK/BL,EAL+B,KAKnBE,GALmB,aAMtBH,mBAAS,GANa,mBAMrCyC,EANqC,KAMhCC,EANgC,KAQ5C,OACE,uBAAMnB,UAAU,eAAhB,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,QAAf,UACE,4CACA,qBAAKA,UAAU,mBAGlBtB,GAAW,oBAAIsB,UAAU,UAAd,wBACXpB,GAAS,cAAC,IAAD,CAAOgB,QAAShB,IAExBG,GACA,qCACE,0BAASiB,UAAU,eAAnB,UACE,yBAASA,UAAU,iBAAnB,SAEIjB,EAAK6B,KAAI,WAAkBC,GAAlB,IAAGJ,EAAH,EAAGA,QAASW,EAAZ,EAAYA,GAAZ,OACP,cAAC,UAAD,CAAchB,SAAUS,IAAQK,EAAKb,MAAOI,EAASH,QAAS,kBAAMa,EAAON,KAAjEO,QAIhB,cAAC,UAAD,CAASrC,KAAMA,EAAKmC,QAEtB,wBAAQlB,UAAU,WAAlB,+B","file":"static/js/9.cb975116.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from 'react';\n\n\nfunction useFetch<T> (url: string): [T | undefined, boolean, () => void, string | null] {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(undefined);\n\n  const retrieveData = useCallback(() => {\n    setLoading(true);\n\n    fetch(url)\n      .then(d => d.json())\n      .then(d => setData(d))\n      .catch(e => setError(e))\n      .finally(() => setLoading(false))\n  }, [url]);\n\n  useEffect(() => {\n    retrieveData();\n  }, [retrieveData]);\n\n  return [data, loading, retrieveData, error];\n}\n\nexport { useFetch };\n","import React, { useEffect, ReactElement } from 'react';\n\n\ninterface ErrorProps {\n  error?: Error;\n  message?: string;\n}\n\n\nfunction Error ({ error, message }: ErrorProps): ReactElement {\n  useEffect(() => {\n    if (error)\n      console.log(error);\n  }, [error]);\n\n  const msg = message ? message : error?.message;\n\n  return (\n    <main className=\"error_component\">\n      <img src=\"./images/error.svg\" alt=\"Error page image\" />\n      <footer>\n        {\n          msg && <h2>{msg}</h2>\n        }\n        {\n          error && <p>You can check console for more information</p>\n        }\n      </footer>\n    </main >\n  );\n}\n\nexport default Error;\n","import React, { ReactElement } from 'react';\n\n\ninterface TabProps {\n  selected?: boolean;\n  title: string;\n  handler: () => void;\n}\n\n\nexport default function Tab (\n  { selected = false, title, handler }: TabProps\n): ReactElement {\n  return (\n    <button className={`tab-btn ${selected ? 'selected' : ''}`} onClick={handler}>\n      {title}\n    </button>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { FaAngleDoubleRight } from 'react-icons/fa'\n\n\ninterface DetailsProps {\n  data: {\n    id: string;\n    order: number;\n    title: string;\n    dates: string;\n    duties: string[];\n    company: string;\n  }\n}\n\n\nexport default function Details ({ data }: DetailsProps): ReactElement {\n  return (\n    <section className=\"details\">\n      <header>\n        <h3>{data.title}</h3>\n        <h4>{data.company}</h4>\n        <p className=\"date\">{data.dates}</p>\n      </header>\n      {\n        data.duties.map((d, idx) => (\n          <div className=\"job-desc\" key={idx}>\n            <FaAngleDoubleRight className=\"duty-icon\" />\n            <p>{d}</p>\n          </div>\n        ))\n      }\n    </section>\n  );\n}\n","import React, { useState, ReactElement } from 'react';\nimport { useBodyStyles } from '../../hooks/useBodyStyles';\nimport { useFetch } from '../../hooks/useFetch';\nimport Details from './components/Details';\nimport Tab from './components/Tab';\nimport Error from '../../components/Error';\nimport './index.scss';\n\nconst DATA_URL = 'https://course-api.com/react-tabs-project';\n\ntype dataSchema = {\n  id: string;\n  order: number;\n  title: string;\n  dates: string;\n  duties: string[];\n  company: string;\n}[];\n\n\nexport default function Tabs (): ReactElement {\n  useBodyStyles({\n    background: 'hsl(210, 36%, 96%)',\n    color: 'hsl(209, 61%, 16%)'\n  });\n  const [data, loading, _, error] = useFetch<dataSchema>(DATA_URL);\n  const [tab, setTab] = useState(0);\n\n  return (\n    <main className=\"tabs_project\">\n      <div className=\"container\">\n        <div className=\"title\">\n          <h2>Experience</h2>\n          <div className=\"underline\"></div>\n        </div>\n      </div>\n      {loading && <h2 className=\"loading\">Loading...</h2>}\n      {error && <Error message={error} />}\n      {\n        data &&\n        <>\n          <section className=\"main-content\">\n            <section className=\"tabs-container\">\n              {\n                data.map(({ company, id }, idx) => (\n                  <Tab key={id} selected={idx === tab} title={company} handler={() => setTab(idx)} />\n                ))\n              }\n            </section>\n            <Details data={data[tab]} />\n          </section>\n          <button className=\"info-btn\">\n            more info\n       </button>\n        </>\n      }\n    </main>\n  );\n}\n"],"sourceRoot":""}