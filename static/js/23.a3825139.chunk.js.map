{"version":3,"sources":["projects/sidebar_and_modal/context.tsx","projects/sidebar_and_modal/data.tsx","projects/sidebar_and_modal/components/Sidebar.tsx"],"names":["AppContext","React","createContext","AppProvider","children","useState","isSidebarOpen","setIsSidebarOpen","isModalOpen","setIsModalOpen","Provider","value","openModal","closeModal","openSidebar","closeSidebar","useGlobalContext","useContext","links","id","text","icon","social","Sidebar","className","src","alt","onClick","map","link"],"mappings":"mTAGMA,E,OAAaC,EAAMC,cAOtB,IAGGC,EAAc,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,SAA0E,EACrDC,oBAAS,GAD4C,mBACxFC,EADwF,KACzEC,EADyE,OAEzDF,oBAAS,GAFgD,mBAExFG,EAFwF,KAE3EC,EAF2E,KAS/F,OACE,cAAET,EAAWU,SAAb,CAAsBC,MAAO,CAC3BL,gBACAE,cACAI,UATc,kBAAMH,GAAe,IAUnCI,WATe,kBAAMJ,GAAe,IAUpCK,YATgB,kBAAMP,GAAiB,IAUvCQ,aATiB,kBAAMR,GAAiB,KAG1C,SAQGH,KAKMY,EAAmB,kBAAMC,qBAAWjB,K,+ICrBpCkB,EAAQ,CACnB,CACEC,GAAI,EACJC,KAAM,OACNC,KAAM,cAAC,IAAD,KAER,CACEF,GAAI,EACJC,KAAM,OACNC,KAAM,cAAC,IAAD,KAER,CACEF,GAAI,EACJC,KAAM,WACNC,KAAM,cAAC,IAAD,KAER,CACEF,GAAI,EACJC,KAAM,WACNC,KAAM,cAAC,IAAD,KAER,CACEF,GAAI,EACJC,KAAM,YACNC,KAAM,cAAC,IAAD,MAIGC,EAAS,CACpB,CACEH,GAAI,EACJE,KAAM,cAAC,IAAD,KAER,CACEF,GAAI,EACJE,KAAM,cAAC,IAAD,KAER,CACEF,GAAI,EACJE,KAAM,cAAC,IAAD,KAER,CACEF,GAAI,EACJE,KAAM,cAAC,IAAD,KAER,CACEF,GAAI,EACJE,KAAM,cAAC,IAAD,O,0HCxDK,SAASE,IAA0B,IAAD,EACPP,6BAAhCV,EADuC,EACvCA,cAAeS,EADwB,EACxBA,aAEvB,OACE,gCACE,sBAAKS,UAAS,UAAKlB,EAAgB,uBAAyB,WAA5D,UACE,sBAAKkB,UAAU,iBAAf,UACE,qBAAKC,IAAI,gBAAgBC,IAAI,OAAOF,UAAU,SAC9C,wBAAQA,UAAU,iBAAiBG,QAASZ,EAA5C,SACE,cAAC,IAAD,SAGJ,oBAAIS,UAAU,QAAd,SACGN,QAAMU,KAAI,SAACC,GAAU,IACZV,EAAmBU,EAAnBV,GAAIC,EAAeS,EAAfT,KAAMC,EAASQ,EAATR,KAClB,OACE,6BACE,8BACGA,EACAD,MAHID,QASf,oBAAIK,UAAU,eAAd,SACGF,SAAOM,KAAI,SAACC,GAAU,IACbV,EAAaU,EAAbV,GAAIE,EAASQ,EAATR,KACZ,OACE,6BACE,4BAAIA,KADGF","file":"static/js/23.a3825139.chunk.js","sourcesContent":["import React, { useState, useContext, ReactElement } from 'react';\n\n\nconst AppContext = React.createContext<{\n  isSidebarOpen: boolean;\n  isModalOpen: boolean;\n  openModal: () => void;\n  closeModal: () => void;\n  openSidebar: () => void;\n  closeSidebar: () => void;\n}>({} as any);\n\n\nconst AppProvider = ({ children }: { children: ReactElement | ReactElement[] }): ReactElement => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n  const openSidebar = () => setIsSidebarOpen(true);\n  const closeSidebar = () => setIsSidebarOpen(false);\n\n  return (\n    < AppContext.Provider value={{\n      isSidebarOpen,\n      isModalOpen,\n      openModal,\n      closeModal,\n      openSidebar,\n      closeSidebar\n    }}>\n      {children}\n    </AppContext.Provider >\n  );\n}\n\nexport const useGlobalContext = () => useContext(AppContext);\n\nexport { AppContext, AppProvider };\n","import React from 'react';\nimport {\n  FaBehance,\n  FaFacebook,\n  FaLinkedin,\n  FaTwitter,\n  FaSketch,\n  FaHome,\n  FaUserFriends,\n  FaFolderOpen,\n  FaCalendarAlt,\n  FaWpforms,\n} from 'react-icons/fa';\n\n\nexport const links = [\n  {\n    id: 1,\n    text: 'home',\n    icon: <FaHome />,\n  },\n  {\n    id: 2,\n    text: 'team',\n    icon: <FaUserFriends />,\n  },\n  {\n    id: 3,\n    text: 'projects',\n    icon: <FaFolderOpen />,\n  },\n  {\n    id: 4,\n    text: 'calendar',\n    icon: <FaCalendarAlt />,\n  },\n  {\n    id: 5,\n    text: 'documents',\n    icon: <FaWpforms />,\n  },\n];\n\nexport const social = [\n  {\n    id: 1,\n    icon: <FaFacebook />,\n  },\n  {\n    id: 2,\n    icon: <FaTwitter />,\n  },\n  {\n    id: 3,\n    icon: <FaLinkedin />,\n  },\n  {\n    id: 4,\n    icon: <FaBehance />,\n  },\n  {\n    id: 5,\n    icon: <FaSketch />,\n  },\n];\n","import React, { ReactElement } from 'react';\nimport { FaTimes } from 'react-icons/fa';\nimport { useGlobalContext } from '../context';\nimport { social, links } from '../data';\n\n\nexport default function Sidebar (): ReactElement {\n  const { isSidebarOpen, closeSidebar } = useGlobalContext();\n\n  return (\n    <aside>\n      <div className={`${isSidebarOpen ? 'sidebar show-sidebar' : 'sidebar'}`}>\n        <div className=\"sidebar-header\">\n          <img src=\"./logo192.png\" alt=\"Logo\" className=\"logo\" />\n          <button className=\"menu-close-btn\" onClick={closeSidebar}>\n            <FaTimes />\n          </button>\n        </div>\n        <ul className=\"links\">\n          {links.map((link) => {\n            const { id, text, icon } = link;\n            return (\n              <li key={id}>\n                <a>\n                  {icon}\n                  {text}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n        <ul className='social-icons'>\n          {social.map((link) => {\n            const { id, icon } = link;\n            return (\n              <li key={id}>\n                <a>{icon}</a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </aside>\n  );\n}\n"],"sourceRoot":""}