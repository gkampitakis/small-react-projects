{"version":3,"sources":["projects/grocery_bud/components/Alert.tsx"],"names":["Alert","msg","type","data","useState","show","setShow","useEffect","timeout","setTimeout","clearTimeout","className"],"mappings":"6MAae,SAASA,EAAT,GAAgE,IAA9CC,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,KAAkC,EACpDC,oBAAS,GAD2C,mBACrEC,EADqE,KAC/DC,EAD+D,KAgB5E,OAbAC,qBAAU,WACR,GAAKN,EAAL,CAEAK,GAAQ,GACR,IAAME,EAAUC,YAAW,WACzBH,GAAQ,KACP,KAEH,OAAO,WACLI,aAAaF,OAEd,CAACL,IAGF,mCACGE,GAAQ,mBAAGM,UAAS,sBAAiBT,GAA7B,SAAsCD","file":"static/js/31.87024c59.chunk.js","sourcesContent":["import React, { useState, useEffect, ReactElement } from 'react';\n\n\nexport interface AlertI {\n  msg: string;\n  type: 'success' | 'danger' | ''\n}\n\ntype AlertProps = AlertI & {\n  data: { title: string; id: string }[]\n}\n\n\nexport default function Alert ({ msg, type, data }: AlertProps): ReactElement {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    if (!msg) return;\n\n    setShow(true);\n    const timeout = setTimeout(() => {\n      setShow(false);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timeout);\n    }\n  }, [data]);\n\n  return (\n    <>\n      {show && <p className={`alert alert-${type}`}>{msg}</p>}\n    </>\n  );\n}\n"],"sourceRoot":""}