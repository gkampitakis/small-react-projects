{"version":3,"sources":["projects/grocery_bud/components/List.tsx","projects/grocery_bud/components/Alert.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","hooks/useLocalStorage.ts","projects/grocery_bud/GroceryBud.tsx"],"names":["EditMemo","memo","FaEdit","TrashMemo","FaTrash","List","data","editItem","removeItem","length","className","map","title","id","onClick","Alert","msg","type","useState","show","setShow","useEffect","timeout","setTimeout","clearTimeout","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","getItem","item","defaultValue","storedItem","localStorage","JSON","parse","setItem","stringify","GroceryBud","useBodyStyles","background","color","setData","sync","useCallback","newValue","Function","error","console","warn","message","useLocalStorage","formValue","setFormValue","alert","setAlert","editId","setEditId","onSubmit","e","preventDefault","d","Date","getTime","toString","onChange","placeholder","element","find"],"mappings":"8KAIMA,EAAWC,eAAKC,KAChBC,EAAYF,eAAKG,KAUvB,SAASC,EAAT,GAA2D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,WAC/B,OACE,qCACKF,EAAKG,QACN,qBAAKC,UAAU,oBAAf,SACGJ,EAAKK,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACR,0BAASH,UAAU,eAAnB,UACE,mBAAGA,UAAU,QAAb,SAAsBE,IACtB,sBAAKF,UAAU,gBAAf,UACE,wBAAQI,QAAS,kBAAMP,EAASM,IAAKH,UAAU,WAA/C,SAA0D,cAACV,EAAD,MAC1D,wBAAQc,QAAS,kBAAMN,EAAWK,IAAKH,UAAU,aAAjD,SAA+D,cAACP,EAAD,WAJ5BU,UAcpCZ,yBAAKI,I,yGCtBL,SAASU,EAAT,GAAgE,IAA9CC,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,KAAMX,EAAkC,EAAlCA,KAAkC,EACpDY,oBAAS,GAD2C,mBACrEC,EADqE,KAC/DC,EAD+D,KAgB5E,OAbAC,qBAAU,WACR,GAAKL,EAAL,CAEAI,GAAQ,GACR,IAAME,EAAUC,YAAW,WACzBH,GAAQ,KACP,KAEH,OAAO,WACLI,aAAaF,OAEd,CAAChB,IAGF,mCACGa,GAAQ,mBAAGT,UAAS,sBAAiBO,GAA7B,SAAsCD,Q,uGC3BtC,SAASS,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,GIL/E,SAASC,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTL,OAAOQ,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOC,EAGNF,ECVT,SAASO,EAAQC,EAAQC,GACvB,IAAIC,EAAOf,OAAOe,KAAKF,GAEvB,GAAIb,OAAOgB,sBAAuB,CAChC,IAAIC,EAAUjB,OAAOgB,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOnB,OAAOoB,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUlD,OAAQiD,IAAK,CACzC,IAAIE,EAAyB,MAAhBD,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQZ,OAAO2B,IAAS,GAAMC,SAAQ,SAAUtB,GAC9C,EAAekB,EAAQlB,EAAKqB,EAAOrB,OAE5BN,OAAO6B,0BAChB7B,OAAO8B,iBAAiBN,EAAQxB,OAAO6B,0BAA0BF,IAEjEf,EAAQZ,OAAO2B,IAASC,SAAQ,SAAUtB,GACxCN,OAAOQ,eAAegB,EAAQlB,EAAKN,OAAOoB,yBAAyBO,EAAQrB,OAKjF,OAAOkB,E,0BC9BT,SAASO,EAASC,EAAcC,GAC9B,IAAMC,EAAaC,aAAaJ,QAAQC,GAExC,OAAKE,EAMEE,KAAKC,MAAMH,IALhBD,GAAgBE,aAAaG,QAAQN,EAAMI,KAAKG,UAAUN,IAEnDA,G,kCCCI,SAASO,IACtBC,YAAc,CACZC,WAAY,qBACZC,MAAO,uBAHyC,MDM7C,SAA6BX,EAAcC,GAA0E,IAAD,EACjGhD,mBAAY8C,EAAQC,EAAMC,IADuE,mBAClH5D,EADkH,KAC5GuE,EAD4G,KAGnHC,EAAOC,uBAAY,WACvBF,EAAQb,EAAQC,MACf,CAACA,IAiBJ,OAfA5C,qBAAU,WACRyD,MACC,CAACA,IAaG,CAACxE,EAXR,SAAmBkC,GACjB,IACE,IAAMwC,EAAWxC,aAAiByC,SAAWzC,EAAMlC,GAAQkC,EAE3D4B,aAAaG,QAAQN,EAAMI,KAAKG,UAAUQ,IAC1CH,EAAQrC,GACR,MAAO0C,GACPC,QAAQC,KAAR,0CAAgDnB,EAAhD,cAA0DiB,EAAMG,YAI5CP,GCvBAQ,CAAiD,cAAe,IALtC,mBAK3ChF,EAL2C,KAKrCuE,EALqC,OAMhB3D,mBAAS,IANO,mBAM3CqE,EAN2C,KAMhCC,EANgC,OAOxBtE,mBAAiB,CAAEF,IAAK,GAAIC,KAAM,KAPV,mBAO3CwE,EAP2C,KAOpCC,EAPoC,OAQtBxE,mBAAS,IARa,mBAQ3CyE,EAR2C,KAQnCC,EARmC,KA+ClD,OACE,uBAAMlF,UAAU,cAAhB,UACE,uBAAMA,UAAU,eAAemF,SAvCnC,SAAuBC,GAGrB,GAFAA,EAAEC,iBAEGR,EAAL,CAEA,GAAII,EASF,OARAd,GAAQ,SAACvE,GAAD,OAAUA,EAAKK,KAAI,SAAAqF,GACzB,OAAIA,EAAEnF,KAAO8E,EAAe,OAAKK,GAAZ,IAAepF,MAAO2E,IACpCS,QAGTN,EAAS,CAAEzE,KAAM,UAAWD,IAAK,iBACjCwE,EAAa,SACbI,EAAU,IAIZf,GAAQ,SAACvE,GAAD,kBAAeA,GAAf,CAAqB,CAAEM,MAAO2E,EAAW1E,IA7BjC,IAAIoF,MAAOC,UAAUC,iBA8BrCT,EAAS,CAAEzE,KAAM,UAAWD,IAAK,2BACjCwE,EAAa,MAoBX,UACE,cAACzE,EAAA,QAAD,CAAOT,KAAMA,EAAMU,IAAKyE,EAAMzE,IAAKC,KAAMwE,EAAMxE,OAC/C,6CACA,sBAAKP,UAAU,eAAf,UACE,uBACEO,KAAK,OACLP,UAAU,UACV8B,MAAO+C,EACPa,SAAU,SAACN,GAAD,OAAON,EAAaM,EAAErC,OAAOjB,QACvC6D,YAAY,cAEd,wBAAQpF,KAAK,SAASP,UAAU,aAAhC,SACc,KAAXiF,EAAgB,OAAS,iBAIhC,cAACtF,EAAA,QAAD,CAAMC,KAAMA,EAAMC,SA7BtB,SAAmBM,GACjB,IAAMyF,EAAUhG,EAAKiG,MAAK,SAAAtC,GAAI,OAAIA,EAAKpD,KAAOA,KAC9C2E,EAAac,EAAS1F,OACtBgF,EAAU/E,IA0B8BL,WAjC1C,SAAqBK,GACnBgE,GAAQ,SAAAvE,GAAI,OAAIA,EAAK6C,QAAO,SAAA6C,GAAC,OAAIA,EAAEnF,KAAOA,aAiCrCP,EAAKG,QAAU,wBAAQC,UAAU,YAAYI,QAxBpD,WACE4E,EAAS,CAAEzE,KAAM,SAAUD,IAAK,eAChC6D,EAAQ,KAsBY,8B","file":"static/js/14.0d7727eb.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { FaEdit, FaTrash } from 'react-icons/fa';\n\n\nconst EditMemo = memo(FaEdit);\nconst TrashMemo = memo(FaTrash);\n\n\ninterface ListProps {\n  data: { id: string; title: string; }[];\n  removeItem: (id: string) => void;\n  editItem: (id: string) => void;\n}\n\n\nfunction List ({ data, editItem, removeItem }: ListProps) {\n  return (\n    <>\n      {!!data.length &&\n        <div className=\"grocery-container\">\n          {data.map(({ title, id }) => (\n            <article className=\"grocery-item\" key={id}>\n              <p className=\"title\">{title}</p>\n              <div className=\"btn-container\">\n                <button onClick={() => editItem(id)} className=\"edit-btn\"><EditMemo /></button>\n                <button onClick={() => removeItem(id)} className=\"delete-btn\" ><TrashMemo /></button>\n              </div>\n            </article>\n          ))}\n        </div>\n      }\n    </>\n  )\n}\n\nexport default memo(List);\n","import React, { useState, useEffect, ReactElement } from 'react';\n\n\nexport interface AlertI {\n  msg: string;\n  type: 'success' | 'danger' | ''\n}\n\ntype AlertProps = AlertI & {\n  data: { title: string; id: string }[]\n}\n\n\nexport default function Alert ({ msg, type, data }: AlertProps): ReactElement {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    if (!msg) return;\n\n    setShow(true);\n    const timeout = setTimeout(() => {\n      setShow(false);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timeout);\n    }\n  }, [data]);\n\n  return (\n    <>\n      {show && <p className={`alert alert-${type}`}>{msg}</p>}\n    </>\n  );\n}\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useState, useEffect, useCallback } from 'react';\n\n\nfunction getItem (item: string, defaultValue?: unknown) {\n  const storedItem = localStorage.getItem(item);\n\n  if (!storedItem) {\n    defaultValue && localStorage.setItem(item, JSON.stringify(defaultValue))\n\n    return defaultValue;\n  }\n\n  return JSON.parse(storedItem);\n}\n\n\nexport function useLocalStorage<T> (item: string, defaultValue?: T): [T, (data: T | ((data: T) => T)) => void, () => void] {\n  const [data, setData] = useState<T>(getItem(item, defaultValue));\n\n  const sync = useCallback(() => {\n    setData(getItem(item));\n  }, [item]);\n\n  useEffect(() => {\n    sync();\n  }, [sync]);\n\n  function setItems (value: T | ((value: T) => T)) {\n    try {\n      const newValue = value instanceof Function ? value(data) : value;\n\n      localStorage.setItem(item, JSON.stringify(newValue));\n      setData(value);\n    } catch (error) {\n      console.warn(`Error setting localStorage key \"${item}\": ${error.message}`);\n    }\n  }\n\n  return [data, setItems, sync];\n}\n","import React, { ReactElement, useState } from 'react';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { useBodyStyles } from '../../hooks/useBodyStyles';\nimport List from './components/List';\nimport Alert, { AlertI } from './components/Alert';\nimport './index.scss';\n\n\nconst newId = () => new Date().getTime().toString();\n\nexport default function GroceryBud (): ReactElement {\n  useBodyStyles({\n    background: 'hsl(210, 36%, 96%)',\n    color: 'hsl(209, 61%, 16%)'\n  });\n  const [data, setData] = useLocalStorage<{ id: string; title: string }[]>('groceryList', []);\n  const [formValue, setFormValue] = useState('');\n  const [alert, setAlert] = useState<AlertI>({ msg: '', type: '' });\n  const [editId, setEditId] = useState('');\n\n  function handleSubmit (e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    if (!formValue) return;\n\n    if (editId) {\n      setData((data) => data.map(d => {\n        if (d.id === editId) return { ...d, title: formValue }\n        return d;\n      }));\n\n      setAlert({ type: 'success', msg: 'Item updated' });\n      setFormValue('');\n      setEditId('');\n      return;\n    }\n\n    setData((data) => ([...data, { title: formValue, id: newId() }]));\n    setAlert({ type: 'success', msg: 'Item added to the list' });\n    setFormValue('');\n  }\n\n  function removeItem (id: string) {\n    setData(data => data.filter(d => d.id !== id));\n  }\n\n  function editItem (id: string) {\n    const element = data.find(item => item.id === id);\n    setFormValue(element!.title);\n    setEditId(id);\n  }\n\n  function clearList () {\n    setAlert({ type: 'danger', msg: 'Empty List' });\n    setData([]);\n  }\n\n  return (\n    <main className=\"grocery_bud\">\n      <form className=\"grocery-form\" onSubmit={handleSubmit}>\n        <Alert data={data} msg={alert.msg} type={alert.type} />\n        <h3>Grocery Bud</h3>\n        <div className=\"form-control\">\n          <input\n            type=\"text\"\n            className=\"grocery\"\n            value={formValue}\n            onChange={(e) => setFormValue(e.target.value)}\n            placeholder='e.g. eggs'\n          />\n          <button type=\"submit\" className=\"submit-btn\">\n            {editId !== '' ? 'edit' : 'submit'}\n          </button>\n        </div>\n      </form>\n      <List data={data} editItem={editItem} removeItem={removeItem} />\n      {!!data.length && <button className=\"clear-btn\" onClick={clearList}>clear items</button>}\n    </main>\n  )\n}\n"],"sourceRoot":""}