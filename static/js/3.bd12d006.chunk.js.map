{"version":3,"sources":["hooks/useFetch.ts","components/Error.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","projects/tabs/components/Tab.tsx","projects/tabs/components/Details.tsx","projects/tabs/Tabs.tsx","projects/tabs/Tabs.spec.tsx"],"names":["useFetch","url","useState","loading","setLoading","error","setError","undefined","data","setData","retrieveData","useCallback","fetch","then","d","json","catch","e","finally","useEffect","Error","message","console","log","msg","className","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","Tab","selected","title","handler","onClick","Details","company","dates","duties","map","idx","Tabs","useBodyStyles","background","color","tab","setTab","id","fetchMock","describe","beforeEach","resetMocks","it","a","enableMocks","mockResponseOnce","JSON","stringify","order","render","baseElement","waitForElementToBeRemoved","screen","getByText","expect","toMatchSnapshot","mockRejectOnce","userEvent","click","tree","renderer","create","toJSON","handlerSpy","jest","toHaveBeenCalledTimes"],"mappings":"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","file":"static/js/3.bd12d006.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from 'react';\n\n\nfunction useFetch<T> (url: string): [T | undefined, boolean, () => void, string | null] {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(undefined);\n\n  const retrieveData = useCallback(() => {\n    setLoading(true);\n\n    fetch(url)\n      .then(d => d.json())\n      .then(d => setData(d))\n      .catch(e => setError(e))\n      .finally(() => setLoading(false))\n  }, [url]);\n\n  useEffect(() => {\n    retrieveData();\n  }, [retrieveData]);\n\n  return [data, loading, retrieveData, error];\n}\n\nexport { useFetch };\n","import React, { useEffect, ReactElement } from 'react';\n\n\ninterface ErrorProps {\n  error?: Error;\n  message?: string;\n}\n\n\nfunction Error ({ error, message }: ErrorProps): ReactElement {\n  useEffect(() => {\n    if (error)\n      console.log(error);\n  }, [error]);\n\n  const msg = message ? message : error?.message;\n\n  return (\n    <main className=\"error_component\">\n      <img src=\"./images/error.svg\" alt=\"Error page image\" />\n      <footer>\n        {\n          msg && <h2>{msg}</h2>\n        }\n        {\n          error && <p>You can check console for more information</p>\n        }\n      </footer>\n    </main >\n  );\n}\n\nexport default Error;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { ReactElement } from 'react';\n\n\ninterface TabProps {\n  selected?: boolean;\n  title: string;\n  handler: () => void;\n}\n\n\nexport default function Tab (\n  { selected = false, title, handler }: TabProps\n): ReactElement {\n  return (\n    <button className={`tab-btn ${selected ? 'selected' : ''}`} onClick={handler}>\n      {title}\n    </button>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { FaAngleDoubleRight } from 'react-icons/fa'\n\n\ninterface DetailsProps {\n  data: {\n    id: string;\n    order: number;\n    title: string;\n    dates: string;\n    duties: string[];\n    company: string;\n  }\n}\n\n\nexport default function Details ({ data }: DetailsProps): ReactElement {\n  return (\n    <section className=\"details\">\n      <header>\n        <h3>{data.title}</h3>\n        <h4>{data.company}</h4>\n        <p className=\"date\">{data.dates}</p>\n      </header>\n      {\n        data.duties.map((d, idx) => (\n          <div className=\"job-desc\" key={idx}>\n            <FaAngleDoubleRight className=\"duty-icon\" />\n            <p>{d}</p>\n          </div>\n        ))\n      }\n    </section>\n  );\n}\n","import React, { useState, ReactElement } from 'react';\nimport { useBodyStyles } from '../../hooks/useBodyStyles';\nimport { useFetch } from '../../hooks/useFetch';\nimport Details from './components/Details';\nimport Tab from './components/Tab';\nimport Error from '../../components/Error';\nimport './index.scss';\n\nconst DATA_URL = 'https://course-api.com/react-tabs-project';\n\ntype dataSchema = {\n  id: string;\n  order: number;\n  title: string;\n  dates: string;\n  duties: string[];\n  company: string;\n}[];\n\n\nexport default function Tabs (): ReactElement {\n  useBodyStyles({\n    background: 'hsl(210, 36%, 96%)',\n    color: 'hsl(209, 61%, 16%)'\n  });\n  const [data, loading, _, error] = useFetch<dataSchema>(DATA_URL);\n  const [tab, setTab] = useState(0);\n\n  return (\n    <main className=\"tabs_project\">\n      <div className=\"container\">\n        <div className=\"title\">\n          <h2>Experience</h2>\n          <div className=\"underline\"></div>\n        </div>\n      </div>\n      {loading && <h2 className=\"loading\">Loading...</h2>}\n      {error && <Error message={error} />}\n      {\n        data &&\n        <>\n          <section className=\"main-content\">\n            <section className=\"tabs-container\">\n              {\n                data.map(({ company, id }, idx) => (\n                  <Tab key={id} selected={idx === tab} title={company} handler={() => setTab(idx)} />\n                ))\n              }\n            </section>\n            <Details data={data[tab]} />\n          </section>\n          <button className=\"info-btn\">\n            more info\n       </button>\n        </>\n      }\n    </main>\n  );\n}\n","import React from 'react';\nimport renderer from 'react-test-renderer';\nimport { render, screen, waitForElementToBeRemoved } from '@testing-library/react'\nimport userEvent from '@testing-library/user-event';\nimport { FetchMock } from 'jest-fetch-mock/types';\nimport Tab from './components/Tab';\nimport Details from './components/Details';\nimport Tabs from './Tabs';\n\n\nconst fetchMock = (fetch as FetchMock);\n\ndescribe('Tabs', () => {\n  describe('Tabs', () => {\n\n    beforeEach(fetchMock.resetMocks);\n\n    it('Should render correctly', async () => {\n      fetchMock.enableMocks();\n      fetchMock.mockResponseOnce(JSON.stringify(\n        [{\n          id: 'rec6d6T3q5EBIdCfD',\n          order: 1,\n          title: 'mockTitle',\n          dates: 'mockDate',\n          duties: ['1', '2', '3'],\n          company: 'mockCompany'\n        }]\n      ));\n      const { baseElement } = render(<Tabs />);\n\n      await waitForElementToBeRemoved(screen.getByText(/Loading/i));\n\n      expect(baseElement).toMatchSnapshot();\n    });\n\n    it('Should render error', async () => {\n      fetchMock.enableMocks();\n      fetchMock.mockRejectOnce(() => Promise.reject('Mock Error'));\n\n      const { baseElement } = render(<Tabs />);\n      await waitForElementToBeRemoved(screen.getByText(/Loading/i));\n\n      expect(baseElement).toMatchSnapshot();\n    });\n\n    it('Should change tab', async () => {\n      fetchMock.enableMocks();\n      fetchMock.mockResponseOnce(JSON.stringify(\n        [{\n          id: 'mockId1',\n          order: 1,\n          title: 'mockTitle',\n          dates: 'mockDate',\n          duties: ['1', '2', '3'],\n          company: 'mockCompany'\n        }, {\n          id: 'mockId2',\n          order: 1,\n          title: 'mockTitle2',\n          dates: 'mockDate2',\n          duties: ['11', '22', '33'],\n          company: 'mockCompany2'\n        }]\n      ));\n      const { baseElement } = render(<Tabs />);\n      await waitForElementToBeRemoved(screen.getByText(/Loading/i));\n\n      userEvent.click(screen.getByText('mockCompany2'));\n\n      expect(baseElement).toMatchSnapshot();\n    });\n  });\n\n  describe('Tab', () => {\n    it('Should render a selected Tab', () => {\n      const tree = renderer\n        .create(<Tab handler={() => void (0)} selected title='mockTitle' />)\n        .toJSON();\n\n      expect(tree).toMatchSnapshot();\n    });\n\n    it('Should render an unselected Tab', () => {\n      const tree = renderer\n        .create(<Tab handler={() => void (0)} title='mockTitle' />)\n        .toJSON();\n\n      expect(tree).toMatchSnapshot();\n    });\n\n    it('Should invoke prop handler', () => {\n      const handlerSpy = jest.fn();\n\n      render(<Tab handler={handlerSpy} title='mockTitle' />);\n      userEvent.click(screen.getByText(/mockTitle/i));\n\n      expect(handlerSpy).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('Details', () => {\n    it('Should render correctly', () => {\n      const data = {\n        id: '12345',\n        order: 1,\n        title: 'mockTitle',\n        dates: 'mockDate',\n        duties: ['1', '2', '3'],\n        company: 'mockCompany'\n      };\n      const tree = renderer\n        .create(<Details data={data} />)\n        .toJSON();\n\n      expect(tree).toMatchSnapshot();\n    });\n  });\n});\n"],"sourceRoot":""}