{"version":3,"sources":["projects/sidebar_and_modal/context.tsx"],"names":["AppContext","React","createContext","AppProvider","children","useState","isSidebarOpen","setIsSidebarOpen","isModalOpen","setIsModalOpen","Provider","value","openModal","closeModal","openSidebar","closeSidebar","useGlobalContext","useContext"],"mappings":"6SAGMA,E,OAAaC,EAAMC,cAOtB,IAGGC,EAAc,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,SAA0E,EACrDC,oBAAS,GAD4C,mBACxFC,EADwF,KACzEC,EADyE,OAEzDF,oBAAS,GAFgD,mBAExFG,EAFwF,KAE3EC,EAF2E,KAS/F,OACE,cAAET,EAAWU,SAAb,CAAsBC,MAAO,CAC3BL,gBACAE,cACAI,UATc,kBAAMH,GAAe,IAUnCI,WATe,kBAAMJ,GAAe,IAUpCK,YATgB,kBAAMP,GAAiB,IAUvCQ,aATiB,kBAAMR,GAAiB,KAG1C,SAQGH,KAKMY,EAAmB,kBAAMC,qBAAWjB","file":"static/js/44.4bb37a56.chunk.js","sourcesContent":["import React, { useState, useContext, ReactElement } from 'react';\n\n\nconst AppContext = React.createContext<{\n  isSidebarOpen: boolean;\n  isModalOpen: boolean;\n  openModal: () => void;\n  closeModal: () => void;\n  openSidebar: () => void;\n  closeSidebar: () => void;\n}>({} as any);\n\n\nconst AppProvider = ({ children }: { children: ReactElement | ReactElement[] }): ReactElement => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n  const openSidebar = () => setIsSidebarOpen(true);\n  const closeSidebar = () => setIsSidebarOpen(false);\n\n  return (\n    < AppContext.Provider value={{\n      isSidebarOpen,\n      isModalOpen,\n      openModal,\n      closeModal,\n      openSidebar,\n      closeSidebar\n    }}>\n      {children}\n    </AppContext.Provider >\n  );\n}\n\nexport const useGlobalContext = () => useContext(AppContext);\n\nexport { AppContext, AppProvider };\n"],"sourceRoot":""}